{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red23\green114\blue152;\red157\green157\blue157;\red208\green43\blue34;
\red77\green125\blue217;\red111\green160\blue251;\red134\green208\blue255;\red240\green106\blue33;}
{\*\expandedcolortbl;;\cssrgb\c8580\c52219\c66000;\cssrgb\c68000\c68000\c68000;\cssrgb\c86000\c25456\c17200;
\cssrgb\c36960\c57376\c88000;\cssrgb\c50490\c69894\c99000;\cssrgb\c59000\c85240\c100000;\cssrgb\c96000\c49786\c16320;}
{\*\background {\shp{\*\shpinst\shpleft0\shptop0\shpright0\shpbottom0\shpfhdr0\shpbxmargin\shpbymargin\shpwr0\shpwrk0\shpfblwtxt1\shpz0\shplid1025{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 1052688}}{\sp{\sn fFilled}{\sv 1}}{\sp{\sn lineWidth}{\sv 0}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn bWMode}{\sv 9}}{\sp{\sn fBackground}{\sv 1}}}}}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 <?xml version="1.0" encoding="UTF-8"?>\cf3 \
\cf4 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\cf3 \
\cf5 <plist\cf6  version=\cf7 "1.0"\cf5 >\cf3 \
\cf5 <dict>\cf3 \
	\cf5 <key>\cf3 AMApplicationBuild\cf5 </key>\cf3 \
	\cf5 <string>\cf3 512\cf5 </string>\cf3 \
	\cf5 <key>\cf3 AMApplicationVersion\cf5 </key>\cf3 \
	\cf5 <string>\cf3 2.10\cf5 </string>\cf3 \
	\cf5 <key>\cf3 AMDocumentVersion\cf5 </key>\cf3 \
	\cf5 <string>\cf3 2\cf5 </string>\cf3 \
	\cf5 <key>\cf3 actions\cf5 </key>\cf3 \
	\cf5 <array>\cf3 \
		\cf5 <dict>\cf3 \
			\cf5 <key>\cf3 action\cf5 </key>\cf3 \
			\cf5 <dict>\cf3 \
				\cf5 <key>\cf3 AMAccepts\cf5 </key>\cf3 \
				\cf5 <dict>\cf3 \
					\cf5 <key>\cf3 Container\cf5 </key>\cf3 \
					\cf5 <string>\cf3 List\cf5 </string>\cf3 \
					\cf5 <key>\cf3 Optional\cf5 </key>\cf3 \
					\cf5 <true/>\cf3 \
					\cf5 <key>\cf3 Types\cf5 </key>\cf3 \
					\cf5 <array>\cf3 \
						\cf5 <string>\cf3 com.apple.applescript.object\cf5 </string>\cf3 \
					\cf5 </array>\cf3 \
				\cf5 </dict>\cf3 \
				\cf5 <key>\cf3 AMActionVersion\cf5 </key>\cf3 \
				\cf5 <string>\cf3 1.0.2\cf5 </string>\cf3 \
				\cf5 <key>\cf3 AMApplication\cf5 </key>\cf3 \
				\cf5 <array>\cf3 \
					\cf5 <string>\cf3 Automator\cf5 </string>\cf3 \
				\cf5 </array>\cf3 \
				\cf5 <key>\cf3 AMParameterProperties\cf5 </key>\cf3 \
				\cf5 <dict>\cf3 \
					\cf5 <key>\cf3 source\cf5 </key>\cf3 \
					\cf5 <dict/>\cf3 \
				\cf5 </dict>\cf3 \
				\cf5 <key>\cf3 AMProvides\cf5 </key>\cf3 \
				\cf5 <dict>\cf3 \
					\cf5 <key>\cf3 Container\cf5 </key>\cf3 \
					\cf5 <string>\cf3 List\cf5 </string>\cf3 \
					\cf5 <key>\cf3 Types\cf5 </key>\cf3 \
					\cf5 <array>\cf3 \
						\cf5 <string>\cf3 com.apple.applescript.object\cf5 </string>\cf3 \
					\cf5 </array>\cf3 \
				\cf5 </dict>\cf3 \
				\cf5 <key>\cf3 ActionBundlePath\cf5 </key>\cf3 \
				\cf5 <string>\cf3 /System/Library/Automator/Run AppleScript.action\cf5 </string>\cf3 \
				\cf5 <key>\cf3 ActionName\cf5 </key>\cf3 \
				\cf5 <string>\cf3 Run AppleScript\cf5 </string>\cf3 \
				\cf5 <key>\cf3 ActionParameters\cf5 </key>\cf3 \
				\cf5 <dict>\cf3 \
					\cf5 <key>\cf3 source\cf5 </key>\cf3 \
					\cf5 <string>\cf3 -- You MUST update the version number in "Version.txt" so that MacYTDL will update the Service if it is installed.\
-- Get URL of video user wants to download from copied or selected text in active app or web browser tab - send URL to MacYTDL\
-- 1st save any data in Clipboard\
-- 2nd check whether any text is selected - if so, parse for link. If link, send to MacYTDL\
-- If no link is selected check the previous saved data from Clipboard. If link found, send to MacYTDL\
-- If no link is found in Clipboard or selection, warn user\
-- Check whether user has turned on auto-downloads \
\
global video_URL\
global app_name_short\
global data_selected\
\
set video_URL to ""\
set data_copied to ""\
set data_selected to ""\
set app_name_short to short name of (info for (path to frontmost application))\
set MacYTDL_preferences_folder to "Library/Preferences/MacYTDL/"\
set MacYTDL_preferences_path to (POSIX path of (path to home folder) \cf8 &amp;\cf3  MacYTDL_preferences_folder)\
set MacYTDL_prefs_file to MacYTDL_preferences_path \cf8 &amp;\cf3  "MacYTDL.plist"\
\
-- Save any data currently in Clipboard\
try\
	set data_copied to the clipboard\
end try\
\
-- Check whether any text has been selected in current app\
copy_selection()\
\
-- If text has been selected, parse for URL\
if data_selected is not "" then\
	parse_selection(data_selected)\
	set the clipboard to ""\
end if\
\
-- If no URL selected, parse saved Clipboard data for URL\
if video_URL is "" then\
	parse_selection(data_copied)\
	set the clipboard to ""\
end if\
\
-- If no URL copied or selected, get URL of current browser tab if frontmost\
if video_URL is "" then\
	get_URL_from_browser()\
	if video_URL is missing value then set video_URL to ""\
end if\
\
-- Send any URL to MacYTDL or start auto download\
if video_URL is not "" then\
	tell application "System Events"\
		tell property list file MacYTDL_prefs_file\
			set DL_auto_download to value of property list item "Auto_Download"\
		end tell\
	end tell\
	if DL_auto_download is false then\
		send_URL()\
	else\
		-- Pass video_URL to auto download code inside MacYTDL bundle\
		tell application "Finder"\
			set appPath to (application file id "com.apple.script.id.MacYTDL" as string)\
		end tell\
		set path_to_Utilities to (appPath \cf8 &amp;\cf3  ":Contents:Resources:Scripts:Utilities.scpt") as alias -- \cf8 &lt;\cf3 = Comment out to enable testing using the following line\
		set run_Utilities_handlers to load script path_to_Utilities\
		run_Utilities_handlers's auto_Download(MacYTDL_prefs_file, video_URL, appPath)\
		set run_Utilities_handlers to ""\
	end if\
else\
	tell application "Finder"\
		set appPath to (application file id "com.apple.script.id.MacYTDL" as string)\
	end tell\
	set icon_Path to (appPath \cf8 &amp;\cf3  ":Contents:Resources:MacYTDL.icns") as string\
	display dialog "To use MacYTDL, select a URL or switch to your web browser." buttons \{"OK"\} with icon file icon_Path default button 1 giving up after 10\
end if\
\
-- Has user selected any text\
on copy_selection()\
	set the clipboard to ""\
	tell application app_name_short\
		tell application "System Events"\
			keystroke "c" using command down\
		end tell\
	end tell\
	delay 0.5\
	try\
		set data_selected to the clipboard\
	end try\
end copy_selection\
\
on parse_selection(data_selected)\
	-- Set delimiters for distinguishing URLs - it's a WIP as some of these are valid inside a URL but, hopefully rare\
	set AppleScript's text item delimiters to \{" ", "	", "\
", "\
", ",", "\\"", "\'94", "\'93", "\'92", "\'91"\}\
	-- Parse selection - if URL, send to MacYTDL - Assume all links are =/\cf8 &lt;\cf3  8 characters + address contains one of the TLDs or http or www\
	if data_selected is not "" then\
		repeat with text_item in text items of data_selected\
			if length of text_item is greater than 8 then\
				if text_item contains ".com" or text_item contains ".org" or text_item contains ".net" or text_item contains ".mil" or text_item contains ".info" or text_item contains ".gov" or text_item contains ".edu" or text_item contains ".int" or text_item contains "gov." or text_item contains ".co." or text 1 thru 4 of text_item is "http" or text 1 thru 4 of text_item is "www" then\
					set video_URL to text_item as text\
					exit repeat\
				end if\
			end if\
		end repeat\
	end if\
	set AppleScript's text item delimiters to ""\
end parse_selection\
\
-- If no URL copied or selected, test whether user has a browser active - if so, get URL of current tab - warn if no window open\
on get_URL_from_browser()\
	try\
		if app_name_short is "Safari" then\
			using terms from application "Safari"\
				tell application "Safari"\
					set video_URL to URL of current tab of first window\
				end tell\
			end using terms from\
		else if app_name_short is "Firefox" then\
			tell application app_name_short to activate\
			tell application "System Events"\
				keystroke "l" using command down\
				keystroke "c" using command down\
			end tell\
			delay 0.5\
			set video_URL to the clipboard\
		else if app_name_short is "Opera" then\
			tell application app_name_short\
				set video_URL to URL of front document as string\
			end tell\
		else if app_name_short is "Chrome" then\
			try\
				set video_URL to run script "\
tell application \\"Chrome\\"\
return URL of active tab of front window\
end tell"\
			end try\
		else if app_name_short is "Brave" then\
			try\
				set video_URL to run script "\
tell application \\"Brave\\"\
return URL of active tab of front window\
end tell"\
			end try\
		else if app_name_short is "Edge" then\
			set app_name_short to "Microsoft Edge"\
			try\
				set video_URL to run script "\
tell application \\"Microsoft Edge\\"\
return URL of active tab of front window\
end tell"\
			end try\
		else if app_name_short is "Chromium" then\
			try\
				set video_URL to run script "\
tell application \\"Chromium\\"\
return URL of active tab of front window\
end tell"\
			end try\
		end if\
	end try\
	\
end get_URL_from_browser\
\
-- If a URL has been found, send it to MacYTDL\
on send_URL()\
	-- Is MacYTDL running\
	set MacYTDL_app_ID to "com.apple.script.id.MacYTDL"\
	tell application "System Events"\
		set MacYTDL_running to ((bundle identifier of processes) contains MacYTDL_app_ID)\
	end tell\
	\
	-- MacYTDL is not running - launch it and pass the URL to main dialog\
	if MacYTDL_running is false then\
		tell application id MacYTDL_app_ID\
			ignoring application responses\
				launch\
				called_by_service(video_URL)\
			end ignoring\
		end tell\
	end if\
	\
	-- MacYTDL is running - bring MacYTDL to the front and set the URL - active app must not be in full screen\
	if MacYTDL_running is true then\
		tell application "System Events"\
			set MacYTDL_appName to name of first process whose bundle identifier is MacYTDL_app_ID\
			tell process app_name_short\
				try\
					tell front window\
						set value of attribute "AXFullScreen" to false\
					end tell\
				end try\
			end tell\
			delay 1\
			try\
				set value of text field 1 of window of process MacYTDL_appName to video_URL\
			on error\
				tell application "Finder"\
					set appPath to (application file id "com.apple.script.id.MacYTDL" as string)\
				end tell\
				set icon_Path to (appPath \cf8 &amp;\cf3  ":Contents:Resources:applet.icns") as string\
				display dialog "Could not send the URL to MacYTDL. Perhaps you have a dialog left open ?" buttons \{"OK"\} default button 1 with icon file icon_Path giving up after 10\
			end try\
			tell process MacYTDL_appName\
				set visible to true\
				set frontmost to true\
			end tell\
		end tell\
	end if\
end send_URL\cf5 </string>\cf3 \
				\cf5 </dict>\cf3 \
				\cf5 <key>\cf3 BundleIdentifier\cf5 </key>\cf3 \
				\cf5 <string>\cf3 com.apple.Automator.RunScript\cf5 </string>\cf3 \
				\cf5 <key>\cf3 CFBundleVersion\cf5 </key>\cf3 \
				\cf5 <string>\cf3 1.0.2\cf5 </string>\cf3 \
				\cf5 <key>\cf3 CanShowSelectedItemsWhenRun\cf5 </key>\cf3 \
				\cf5 <false/>\cf3 \
				\cf5 <key>\cf3 CanShowWhenRun\cf5 </key>\cf3 \
				\cf5 <true/>\cf3 \
				\cf5 <key>\cf3 Category\cf5 </key>\cf3 \
				\cf5 <array>\cf3 \
					\cf5 <string>\cf3 AMCategoryUtilities\cf5 </string>\cf3 \
				\cf5 </array>\cf3 \
				\cf5 <key>\cf3 Class Name\cf5 </key>\cf3 \
				\cf5 <string>\cf3 RunScriptAction\cf5 </string>\cf3 \
				\cf5 <key>\cf3 InputUUID\cf5 </key>\cf3 \
				\cf5 <string>\cf3 2111E021-C967-4C84-AE3E-C677FCD02E39\cf5 </string>\cf3 \
				\cf5 <key>\cf3 Keywords\cf5 </key>\cf3 \
				\cf5 <array>\cf3 \
					\cf5 <string>\cf3 Run\cf5 </string>\cf3 \
				\cf5 </array>\cf3 \
				\cf5 <key>\cf3 OutputUUID\cf5 </key>\cf3 \
				\cf5 <string>\cf3 15BC1D8D-EC05-4A33-B997-5E6ABCEEF54E\cf5 </string>\cf3 \
				\cf5 <key>\cf3 UUID\cf5 </key>\cf3 \
				\cf5 <string>\cf3 3756F166-A479-477A-A200-E9404FE62CD1\cf5 </string>\cf3 \
				\cf5 <key>\cf3 UnlocalizedApplications\cf5 </key>\cf3 \
				\cf5 <array>\cf3 \
					\cf5 <string>\cf3 Automator\cf5 </string>\cf3 \
				\cf5 </array>\cf3 \
				\cf5 <key>\cf3 arguments\cf5 </key>\cf3 \
				\cf5 <dict>\cf3 \
					\cf5 <key>\cf3 0\cf5 </key>\cf3 \
					\cf5 <dict>\cf3 \
						\cf5 <key>\cf3 default value\cf5 </key>\cf3 \
						\cf5 <string>\cf3 on run \{input, parameters\}\
	\
	(* Your script goes here *)\
	\
	return input\
end run\cf5 </string>\cf3 \
						\cf5 <key>\cf3 name\cf5 </key>\cf3 \
						\cf5 <string>\cf3 source\cf5 </string>\cf3 \
						\cf5 <key>\cf3 required\cf5 </key>\cf3 \
						\cf5 <string>\cf3 0\cf5 </string>\cf3 \
						\cf5 <key>\cf3 type\cf5 </key>\cf3 \
						\cf5 <string>\cf3 0\cf5 </string>\cf3 \
						\cf5 <key>\cf3 uuid\cf5 </key>\cf3 \
						\cf5 <string>\cf3 0\cf5 </string>\cf3 \
					\cf5 </dict>\cf3 \
				\cf5 </dict>\cf3 \
				\cf5 <key>\cf3 isViewVisible\cf5 </key>\cf3 \
				\cf5 <integer>\cf3 1\cf5 </integer>\cf3 \
				\cf5 <key>\cf3 location\cf5 </key>\cf3 \
				\cf5 <string>\cf3 846.000000:368.000000\cf5 </string>\cf3 \
				\cf5 <key>\cf3 nibPath\cf5 </key>\cf3 \
				\cf5 <string>\cf3 /System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib\cf5 </string>\cf3 \
			\cf5 </dict>\cf3 \
			\cf5 <key>\cf3 isViewVisible\cf5 </key>\cf3 \
			\cf5 <integer>\cf3 1\cf5 </integer>\cf3 \
		\cf5 </dict>\cf3 \
	\cf5 </array>\cf3 \
	\cf5 <key>\cf3 connectors\cf5 </key>\cf3 \
	\cf5 <dict/>\cf3 \
	\cf5 <key>\cf3 variables\cf5 </key>\cf3 \
	\cf5 <array>\cf3 \
		\cf5 <dict>\cf3 \
			\cf5 <key>\cf3 UUID\cf5 </key>\cf3 \
			\cf5 <string>\cf3 844A34DE-EEA4-48B1-B56C-4941A4510522\cf5 </string>\cf3 \
			\cf5 <key>\cf3 identifier\cf5 </key>\cf3 \
			\cf5 <string>\cf3 com.apple.Automator.Variable.Storage\cf5 </string>\cf3 \
			\cf5 <key>\cf3 name\cf5 </key>\cf3 \
			\cf5 <string>\cf3 Version\cf5 </string>\cf3 \
		\cf5 </dict>\cf3 \
		\cf5 <dict>\cf3 \
			\cf5 <key>\cf3 UUID\cf5 </key>\cf3 \
			\cf5 <string>\cf3 2A260930-664F-470E-A3B7-E7427243434A\cf5 </string>\cf3 \
			\cf5 <key>\cf3 identifier\cf5 </key>\cf3 \
			\cf5 <string>\cf3 com.apple.Automator.Variable.Text\cf5 </string>\cf3 \
			\cf5 <key>\cf3 name\cf5 </key>\cf3 \
			\cf5 <string>\cf3 Text\cf5 </string>\cf3 \
			\cf5 <key>\cf3 value\cf5 </key>\cf3 \
			\cf5 <string>\cf3 Text\cf5 </string>\cf3 \
		\cf5 </dict>\cf3 \
	\cf5 </array>\cf3 \
	\cf5 <key>\cf3 workflowMetaData\cf5 </key>\cf3 \
	\cf5 <dict>\cf3 \
		\cf5 <key>\cf3 applicationBundleIDsByPath\cf5 </key>\cf3 \
		\cf5 <dict/>\cf3 \
		\cf5 <key>\cf3 applicationPaths\cf5 </key>\cf3 \
		\cf5 <array/>\cf3 \
		\cf5 <key>\cf3 inputTypeIdentifier\cf5 </key>\cf3 \
		\cf5 <string>\cf3 com.apple.Automator.nothing\cf5 </string>\cf3 \
		\cf5 <key>\cf3 outputTypeIdentifier\cf5 </key>\cf3 \
		\cf5 <string>\cf3 com.apple.Automator.nothing\cf5 </string>\cf3 \
		\cf5 <key>\cf3 presentationMode\cf5 </key>\cf3 \
		\cf5 <integer>\cf3 11\cf5 </integer>\cf3 \
		\cf5 <key>\cf3 processesInput\cf5 </key>\cf3 \
		\cf5 <false/>\cf3 \
		\cf5 <key>\cf3 serviceInputTypeIdentifier\cf5 </key>\cf3 \
		\cf5 <string>\cf3 com.apple.Automator.nothing\cf5 </string>\cf3 \
		\cf5 <key>\cf3 serviceOutputTypeIdentifier\cf5 </key>\cf3 \
		\cf5 <string>\cf3 com.apple.Automator.nothing\cf5 </string>\cf3 \
		\cf5 <key>\cf3 serviceProcessesInput\cf5 </key>\cf3 \
		\cf5 <false/>\cf3 \
		\cf5 <key>\cf3 systemImageName\cf5 </key>\cf3 \
		\cf5 <string>\cf3 NSActionTemplate\cf5 </string>\cf3 \
		\cf5 <key>\cf3 useAutomaticInputType\cf5 </key>\cf3 \
		\cf5 <false/>\cf3 \
		\cf5 <key>\cf3 workflowTypeIdentifier\cf5 </key>\cf3 \
		\cf5 <string>\cf3 com.apple.Automator.servicesMenu\cf5 </string>\cf3 \
	\cf5 </dict>\cf3 \
\cf5 </dict>\cf3 \
\cf5 </plist>\cf3 \
}